import tkinter as tk
from tkinter import ttk
from tkinter import filedialog
from tkinter import messagebox
from Bioaccum import run_bio


class selectInput (tk.Frame):

    def __init__(self, master=None):
        print("hello agian")
        self.master = master
        self.r_dictionary = None
        self.ran = False
        master.title("FishRand")
        super().__init__(master)
        self.pack()
        self.Widg()
        

    def Widg(self):
        tk.Label(self, text="Input file:").pack()
        inputfile = tk.StringVar()
        inputbutton = tk.Button(self, text="Choose File", command=self.askfile, width = 18)
        inputbutton.pack()
        tk.Button(self, text="Run", command=self.run_bio).pack()

    def askfile(self):

        self.filename = filedialog.askopenfilename()
        self.parse_filename()


    def run_bio(self):

        self.r_dictionary = run_bio(1,self.filename, self.parse_filename())
        self.ran = True
        self.destroy()

    def parse_filename(self):
        
       pieces = self.filename.split('/')
       return pieces[len(pieces)-1]
        

class display_save(tk.Frame):

    def __init__(self, r_dic, master=None):
        self.r_dic = r_dic
        master.title("FishRand")
        super().__init__(master)
        self.grid()
        self.addWidg()
        

    def addWidg(self):
        
        ###Top Labels###

        tk.Label(self, text="View Distributions", font=("Times New Roman", 18), height= 2).grid(row=1,column=0, columnspan=3)
        tk.Label(self, text="Save Results", font=("Times New Roman", 18), height= 2).grid(row=1,column=4, columnspan=3, sticky=tk.W)
        ttk.Separator(self, orient="horizontal").place(x=0,y=125, relwidth=10)
        ttk.Separator(self, orient="horizontal").place(x=0,y=170, relwidth=10)
        ###getting reference to region animal chemical###

        ident = ["Region:", "Organism:", "Chemical:"]
        #To be replaced
        regs = ["None", "The Pond"]
        animals = ["None", "Aquatic Wart-Hog"]
        chemicals = ["None", "Bad Chemical"]
        options = [regs, animals, chemicals]

        for i in range (1,7,2):

            tk.Label(self, text=ident[i//2]).grid(row=i+1, column=0, sticky=tk.W)
            region = tk.StringVar(self)
            region.set("None")
            opt = tk.OptionMenu(self, region, *options[i//2])
            opt.grid(row=i+2, column=0, sticky=tk.W)
        
            
        ###choosing what graphs to view###
        
        tk.Label(self, text="Graph Options:").grid(column=3,row=2, sticky=tk.W)
        options = [("CDFs with all fits", 0), ("PDFs with all fits", 1),
                   ("Both with all fits", 2), ("CDF and PDF of specified fit", 3)
                   ]
        viewnum = tk.IntVar()
        count = 3
        for text, opt in options:
            button = tk.Radiobutton(self, text=text, variable = viewnum, value = opt)
            button.grid(column=3, row = count, sticky=tk.W)
            count +=1

        #command= needs to be edited                                                                  
        getgraphs = tk.Button(self, text="Show Distributions").grid(row=7, column=3, sticky=tk.W)

        
        ttk.Separator(self,orient=tk.VERTICAL).place(x=340,y=40,height=295)

        ###saving data###
        
        tk.Label(self, text="Timestep to save:").grid(column=4,row=2, padx=20)
        timeentry = tk.Entry(self)
        timeentry.grid(column=4,row=3, padx=20, pady=2)
        tk.Label(self, text="Filename:").grid(column=4, row=4, padx=20, pady=2)
        filenameentry = tk.Entry(self)
        filenameentry.grid(column=4,row=5, padx=20,pady=2)
        direcbutton = tk.Button(self, text="Choose Directory", command=filedialog.askdirectory, width = 18)
        direcbutton.grid(column=4,row=6,padx=20,pady=2)
        #Command
        savebutton = tk.Button(self, text="Save", width=18)
        savebutton.grid(column=4, row=7, padx=20,pady=2)

         ###Fish Image###                                                                                                                         
        fish_image = tk.PhotoImage(file="fishrand.gif")
        label_image = tk.Label(self, image=fish_image)
        label_image.image = fish_image
        label_image.grid(row=0,column=0, sticky=tk.W)

def closing():
    global exitflag

    if messagebox.askokcancel("Quit", "Do you want to quit?"):
        exitflag = True
        root.destroy()

def windows(inputwin):
    print("hello")
    global exitflag
    if not exitflag:
        inputwindow = selectInput(master=inputwin)
        if inputwindow.ran:
            displaysave = tk.Toplevel(root)
            displaysave.protocol("WM_DELETE_WINDOW", closing)
            second_window(displaysave, r_dic)
           
        
def main():

    global exitflag
    global root

    root.withdraw()
    inputwin = tk.Toplevel(root)
    inputwin.protocol("WM_DELETE_WINDOW", closing)
    windows(inputwin)
    root.mainloop()


exitflag = False
root = tk.Tk()
main()
